name: Builds

on:
  push:
    paths-ignore:
      - "CHANGELOG.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "CHANGELOG.md"
      - "README.md"

jobs:

  webapp:
    name: Webapp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder-linux:webapp"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"

      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh webapp
      - run: docker push ${BUILDER_TAG} || true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-resources-public
          path: resources/public

  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder-linux:latest"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"

      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh linux
      - run: docker push ${BUILDER_TAG} || true

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build
          path: dist/*.zip
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build
          path: dist/*.deb
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build
          path: dist/*.rpm

  # Supports Pi 2/3/4
  # https://chacin.dev/blog/cross-compiling-rust-for-the-raspberry-pi/
  linux-armv7:
    name: Arm v7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder--armv7:latest"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh linux-armv7
      - run: docker push ${BUILDER_TAG} || true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build-armv7
          path: dist/*.zip


  # Supports Pi 0/1
  linux-armv6:
    name: Arm v6
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder--armv6:latest"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh linux-armv6
      - run: docker push ${BUILDER_TAG} || true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build-armv6
          path: dist/*.zip

  windows:
    name: Windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder-windows:latest"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh windows
      - run: docker push ${BUILDER_TAG} || true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build
          path: dist/*.zip

  macos:
    name: MacOS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "::set-env name=BUILDER_TAG::docker.pkg.github.com/$GITHUB_ACTOR/evebox/builder-macos:latest"
      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"

      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - run: docker pull ${BUILDER_TAG} || true
      - run: ./build.sh macos
      - run: docker push ${BUILDER_TAG} || true
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BRANCH_PREFIX }}-build
          path: dist/*.zip

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [linux, linux-armv7, linux-armv6]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2

      - run: echo "::set-env name=BRANCH_PREFIX::$(git rev-parse --abbrev-ref HEAD | awk '{split($0,a,"/"); print a[1]}')"

      - run: ls -lR
      - uses: crazy-max/ghaction-docker-buildx@v3
      - run: |
          mkdir -p ~/.docker
          echo '{"experimental": "enabled"}' > ~/.docker/config.json
      - run: |
          mkdir -p dist
          cd dist
          unzip ../${BRANCH_PREFIX}-build/evebox-latest-linux-x64.zip
          mkdir -p dist-armv7
          cd dist-armv7
          unzip ../../${BRANCH_PREFIX}-build-armv7/evebox-latest-linux-arm.zip
          mkdir -p ../dist-armv6
          cd ../dist-armv6
          unzip ../../${BRANCH_PREFIX}-build-armv6/evebox-latest-linux-arm.zip
      - run: ./build.sh docker
      - name: Push Docker images and manifest
        if: github.ref == 'refs/heads/master'
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          ./build.sh docker-push
